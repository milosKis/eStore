@model PagedList.IPagedList<eStore.Models.Auction>
@using eStore.Models
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";

    List<SelectListItem> selectList = new List<SelectListItem>();

    selectList.Add(new SelectListItem
    {
        Text = "All",
        Value = ""
    });

    selectList.Add(new SelectListItem
    {
        Text = "Ready",
        Value = "READY"
    });

    selectList.Add(new SelectListItem
    {
        Text = "Opened",
        Value = "Opened"
    });

    selectList.Add(new SelectListItem
    {
        Text = "Closed",
        Value = "Closed"
    });


}

<h2>Auctions</h2>

@using (Html.BeginForm())
{
<div class="row">
    <div class="col-sm-3 form-group">
        @Html.Label("Name")
        @Html.TextBox("searchString", ViewBag.CurrentFilter as string, new { placeholder = "", @class = "form-control" })
    </div>
    <div class="col-sm-3 form-group">
        @Html.Label("Lowest price")
        @Html.TextBox("lowPrice", "", new { placeholder = "", @class = "form-control" })
    </div>
    <div class="col-sm-3 form-group">
        @Html.Label("Highest price")
        @Html.TextBox("highPrice", "", new { placeholder = "", @class = "form-control" })
    </div>
    <div class="col-sm-2 form-group">
        @Html.Label("State")
        @Html.DropDownList("state", selectList, new {@class = "form-control"})
    </div>
    <div class="col-sm-1 form-group">
        @Html.Label("   ")
        <button class="btn btn-primary" type="submit">Search</button>
    </div>
</div>
}
    @foreach (var auction in Model)
    {

<div class="col-sm-3">



    @{
        string imreBase64Data = Convert.ToBase64String(@auction.Image);
        string imgDataUrl = string.Format("data:image/png;base64,{0}", imreBase64Data);
        long time = 0;
        if (auction.State == AuctionState.Opened)
        {
            time = (long)(((DateTime)auction.DateTimeOpened).Ticks - DateTime.Now.Ticks) / TimeSpan.TicksPerMillisecond + auction.Duration * 1000;
        }

    }
    
        <div class="card" style="width:200px; border: 1px solid #df691a; margin: 10px; margin-left: 0px; padding: 10px;" align="center">
            <div style="border-bottom: 1px solid #df691a; margin-bottom: 5px;"><h4 class="card-title">@auction.Name</h4></div>
            <a href='@Url.Action("Details", "Auctions", new { id = auction.Id })' style="text-decoration: none;">
                <img class="card-img-top" style="width: 100px; height: 150px; margin-bottom: 5px;" src="@imgDataUrl" alt="Card image">
            </a>
            <div class="card-body">
                @if (auction.State == AuctionState.Completed)
                {
                    <span class="label label-danger" style="margin-bottom: 5px;">@auction.State</span><br />
                    <br/>                                                                        
                }
                else if (auction.State == AuctionState.Opened)
                {
                    <span class="label label-success" style="margin-bottom: 5px;">@auction.State</span><br />
                    <span class="card-text" style="margin-bottom: 5px;"><text id="@auction.Id" time="@time"></text></span><br />
                }
                else
                {
                    <span class="label label-default" style="margin-bottom: 5px;">@auction.State</span><br />
                    <br/>
                }

                <span class="label label-default" style="margin-bottom: 5px;">@auction.CurrentPrice</span><br />
                <span class="label label-default" style="margin-bottom: 5px;">@auction.User.FirstName @auction.User.LastName</span><br />

                @if (Request.IsAuthenticated && auction.State == AuctionState.Opened)
                {
                    <button class="btn btn-primary" style="margin: 5px;">Bid</button>
                }
                else
                {
                    <button class="btn btn-primary" style="margin: 5px;" disabled="disabled" name="@auction.Id">Bid</button>
                }


            </div>
</div>
</div>
}

<br />
<div class="row">
    <div class="col-sm-12">
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

        @Html.PagedListPager(Model, page => Url.Action("Index",
            new { page, currentFilter = ViewBag.CurrentFilter }))
    </div>
</div>

@section scripts
{
    <script>
        $(window).ready(function() {
            $(".active a").css("background-color", "#df691a");
            $("span text").each(function() {
                timer($(this).attr("id"), $(this).attr("time"));
            });
        });
    </script>

    <script type="text/javascript">
        var counter = 0;
        var array = new Array();

        function timer(id, time) {
            // Update the count down every 1 second
            if (time.charAt(0) == '-') {
                document.getElementById(id).innerHTML = "EXPIRED";
                return;
            }
            time = parseInt(time);
            time += new Date().getTime();
            var x = setInterval(function () { callBack(id, time, counter); }, 1000);
            array[counter++] = x;
        }

        
    

        function callBack(id, time, counter) {
            time = parseInt(time);
            var now = new Date().getTime();
            counter = parseInt(counter);

            // Find the distance between now and the count down date
            var distance = time - now;
            if (distance <= 0) {
                clearInterval(counter);
                document.getElementById(id).innerHTML = "EXPIRED";
                return;
            } else {
                // Time calculations for days, hours, minutes and seconds
                var days = Math.floor(distance / (1000 * 60 * 60 * 24));
                var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
                var seconds = Math.floor((distance % (1000 * 60)) / 1000);

                // Display the result in the element with id="demo"
                document.getElementById(id).innerHTML = days + "d " + hours + "h " + minutes + "m " + seconds + "s ";
            }
            // If the count down is finished, write some text
        }

    </script>
}



