@model PagedList.IPagedList<eStore.Models.Auction>
@using eStore.Models
@using Microsoft.AspNet.Identity
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";

    List<SelectListItem> selectList = new List<SelectListItem>();

    selectList.Add(new SelectListItem
    {
        Text = "All",
        Value = "All"
    });

    selectList.Add(new SelectListItem
    {
        Text = "Ready",
        Value = AuctionState.Ready
    });

    selectList.Add(new SelectListItem
    {
        Text = "Opened",
        Value = AuctionState.Opened
    });

    selectList.Add(new SelectListItem
    {
        Text = "Completed",
        Value = AuctionState.Completed
    });

    string userId = "";
    string user = "";
    if (Request.IsAuthenticated && !User.IsInRole(RoleName.MaintenanceManager))
    {
        userId = User.Identity.GetUserId();
        user = User.Identity.GetUserName();
    }

}

<h2>Auctions</h2>
@if (Request.IsAuthenticated && !User.IsInRole(RoleName.MaintenanceManager))
{
    <div>
        <div id="tokens" style="float: left;">@ViewBag.NumOfTokens</div>&nbsp;&nbsp;
        <img src="~/images/token.png" />
    </div>

}

@using (Html.BeginForm())
{
    <div class="row">
        <div class="col-sm-3 form-group">
            @Html.Label("Name")
            @Html.TextBox("searchString", ViewBag.CurrentFilter as string, new { placeholder = "", @class = "form-control" })
        </div>
        <div class="col-sm-3 form-group">
            @Html.Label("Lowest price")
            @Html.TextBox("lowPrice", "", new { placeholder = "", @class = "form-control" })
        </div>
        <div class="col-sm-3 form-group">
            @Html.Label("Highest price")
            @Html.TextBox("highPrice", "", new { placeholder = "", @class = "form-control" })
        </div>
        <div class="col-sm-2 form-group">
            @Html.Label("State")
            @Html.DropDownList("state", selectList, new { @class = "form-control" })
        </div>
        <div class="col-sm-1 form-group">
            @Html.Label("   ")
            <button class="btn btn-primary" type="submit">Search</button>
        </div>
    </div>
}
@foreach (var auction in Model)
{

    <div class="col-sm-3">



        @{
            string imreBase64Data = Convert.ToBase64String(@auction.Image);
            string imgDataUrl = string.Format("data:image/png;base64,{0}", imreBase64Data);
            long time = 0;
            if (auction.State == AuctionState.Opened)
            {
                time = (long)(((DateTime)auction.DateTimeOpened).Ticks - DateTime.Now.Ticks) / TimeSpan.TicksPerMillisecond + auction.Duration * 1000;
            }

        }

        <div class="card" style="width:200px; border: 1px solid #df691a; margin: 10px; margin-left: 0px; padding: 10px;" align="center">
            <div style="border-bottom: 1px solid #df691a; margin-bottom: 5px;"><h4 class="card-title">@auction.Name</h4></div>
            <a href='@Url.Action("Details", "Auctions", new { id = auction.Id })' style="text-decoration: none;">
                <img class="card-img-top" style="width: 100px; height: 150px; margin-bottom: 5px;" src="@imgDataUrl" alt="Card image">
            </a>
            <div class="card-body">
                @if (auction.State == AuctionState.Completed)
                {
                    <span class="label label-danger" style="margin-bottom: 5px;">@auction.State</span><br />
                    <br />
                }
                else if (auction.State == AuctionState.Opened)
                {
                    <div id="@auction.Id state">
                        <span class="label label-success" style="margin-bottom: 5px;">@auction.State</span><br />
                    </div>

                    <span class="card-text" style="margin-bottom: 5px;"><text id="@auction.Id" time="@time"></text></span><br />
                }
                else
                {
                    <span class="label label-default" style="margin-bottom: 5px;">@auction.State</span><br />
                    <br />
                }

                <span class="label label-default" style="margin-bottom: 5px;"><text id="@auction.Id price">@auction.CurrentPrice</text><text> @auction.Currency</text></span><br />
                @if (auction.LastBidder != null)
                {
                    <span class="label label-default" style="margin-bottom: 5px;"><text id="@auction.Id name">@auction.LastBidder.Email</text></span><br />
                }
                else
                {
                    <span class="label label-default" style="margin-bottom: 5px;"><text id="@auction.Id name">No bidder</text></span><br />
                }

                <div id="@auction.Id btn">
                    @if (Request.IsAuthenticated && auction.State == AuctionState.Opened && !User.IsInRole(RoleName.MaintenanceManager))
                    {
                        if (auction.LastBidder != null)
                        {
                            if (auction.User.Email != user)
                            {
                                <button class="btn btn-primary" id="@auction.Id btn" style="margin: 5px;" onclick="bid(@auction.CurrentPrice,1, @ViewBag.TokenValue, @auction.Id)">Bid</button>
                            }
                            else
                            {
                                <button class="btn btn-primary" id="@auction.Id btn" style="margin: 5px;" onclick="bid(@auction.CurrentPrice,1, @ViewBag.TokenValue, @auction.Id)" disabled="disabled">Bid</button>
                            }

                        }
                        else
                        {
                            if (auction.User.Email != user)
                            {
                                <button class="btn btn-primary" id="@auction.Id btn" style="margin: 5px;" onclick="bid(@auction.CurrentPrice,0, @ViewBag.TokenValue, @auction.Id)">Bid</button>
                            }
                            else
                            {
                                <button class="btn btn-primary" id="@auction.Id btn" style="margin: 5px;" onclick="bid(@auction.CurrentPrice,0, @ViewBag.TokenValue, @auction.Id)" disabled="disabled">Bid</button>
                            }
                        }
                    }
                    else
                    {
                        <button class="btn btn-primary" style="margin: 5px;" disabled="disabled">Bid</button>
                    }
                </div>


            </div>
        </div>
    </div>
}


<br />
<div class="row">
    <div class="col-sm-12">
        @if (Model.Count == 0)
        {
            <h3>There's no such auction yet!</h3>
        }
        else
        {
            <div>Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount</div>
        }

        @Html.PagedListPager(Model, page => Url.Action("Index",
            new { page, currentFilter = ViewBag.CurrentFilter }))
    </div>
</div>

@section scripts
{
    <script src="~/Scripts/jquery.signalR-2.3.0.min.js"></script>
    <script src="~/signalr/js"></script>
    
    <script>
        var myHub = $.connection.hub.start();

        $.connection.hub.disconnected(function () {

            setTimeout(function () {
                myHub = $.connection.hub.start();
                console.log("disconnected");
            }, 5000);
        });

        $.connection.myHub.client.updatePriceAndBidder = function(newPrice, newBidder, auctionId) {
            var priceField = document.getElementById(auctionId + " price");
            if (priceField != null)
                priceField.innerHTML = newPrice;

            var nameField = document.getElementById(auctionId + " name");
            if (nameField != null)
                nameField.innerHTML = newBidder;
        };
    </script>

    <script>
        $(window).ready(function () {
            $(".active a").css("background-color", "#df691a");
            $("span text[time]").each(function () {
                timer($(this).attr("id"), $(this).attr("time"));
            });
        });
    </script>

    <script type="text/javascript">
        var counter = 0;
        var array = new Array();

        function timer(id, time) {
            // Update the count down every 1 second
            if (time.charAt(0) == '-') {
                document.getElementById(id).innerHTML = "";
                document.getElementById(id + " state").innerHTML = "<span class='label label-danger' style='margin-bottom: 5px;' >COMPLETED</span><br />";
                document.getElementById(id + " btn").innerHTML = "<button class='btn btn-primary' style='margin: 5px;' disabled='disabled'>Bid</button>";
                return;
            }
            time = parseInt(time);
            time += new Date().getTime();
            var x = setInterval(function () { callBack(id, time, counter); }, 1000);
            array[counter++] = x;
        }




        function callBack(id, time, counter) {
            time = parseInt(time);
            var now = new Date().getTime();
            counter = parseInt(counter);

            // Find the distance between now and the count down date
            var distance = time - now;
            if (distance <= 0) {
                clearInterval(counter);
                document.getElementById(id).innerHTML = "";
                document.getElementById(id + " state").innerHTML = "<span class='label label-danger' style='margin-bottom: 5px;' >COMPLETED</span><br />";
                document.getElementById(id + " btn").innerHTML = "<button class='btn btn-primary' style='margin: 5px;' disabled='disabled'>Bid</button>";
                $.ajax({
                    type: "POST",
                    url: "/Auctions/CompleteAuction/" + id,
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    success: function () {

                    }
                });
                return;
            } else {
                // Time calculations for days, hours, minutes and seconds
                var days = Math.floor(distance / (1000 * 60 * 60 * 24));
                var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
                var seconds = Math.floor((distance % (1000 * 60)) / 1000);

                // Display the result in the element with id="demo"
                document.getElementById(id).innerHTML = days + "d " + hours + "h " + minutes + "m " + seconds + "s ";
            }
            // If the count down is finished, write some text
        }


        function bid(currentPrice, notFirst, tokenValue, auctionId) {
            notFirst = parseInt(notFirst);
            tokenValue = parseFloat(tokenValue);
            var tokens = document.getElementById("tokens").innerHTML;
            tokens = parseFloat(tokens);
            currentPrice = parseFloat(currentPrice);
            var tokensNeeded = (currentPrice / tokenValue) + 1;
            if (notFirst == 0)
                tokensNeeded = currentPrice / tokenValue;

            var lastBidder = document.getElementById(auctionId + " name").innerHTML; //added
            if (lastBidder == "@user")  //added
                tokensNeeded = 1;  //added

            if (tokens < tokensNeeded) {
                bootbox.alert("You don't have enough tokens!",
                    function (result) {
                        if (result) {

                        }
                    });
            } else {
                tokens = tokens - tokensNeeded;
                currentPrice = currentPrice + tokenValue;
                document.getElementById("tokens").innerHTML = tokens + "";
                if (notFirst == 0)
                    currentPrice -= tokenValue;
                //document.getElementById(auctionId + " price").innerHTML = currentPrice + "";

                //document.getElementById(auctionId + " name").innerHTML = "@user";
                if (notFirst != 0) {
                    $.ajax({
                        type: "GET",
                        url: "/Bids/Create/?numOfTokens=1&auctionId=" + auctionId,
                        dataType: "json",
                        contentType: "application/json; charset=utf-8",
                        success: function() {

                        }
                    });
                } else {
                    $.ajax({
                        type: "GET",
                        url: "/Bids/Create/?numOfTokens=0&auctionId=" + auctionId,
                        dataType: "json",
                        contentType: "application/json; charset=utf-8",
                        success: function () {

                        }
                    });
                }

            }

        }

        

    </script>
}



