@using System.Web.UI.HtmlControls
@using eStore.Models
@using Microsoft.Ajax.Utilities
@using HtmlHelper = System.Web.WebPages.Html.HtmlHelper
@using Microsoft.AspNet.Identity;
@model eStore.Models.AuctionDetailsModel
@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";

    string userId = "";
    string user = "";
    if (Request.IsAuthenticated && !User.IsInRole(RoleName.MaintenanceManager))
    {
        userId = User.Identity.GetUserId();
        user = User.Identity.GetUserName();
    }
}

<h2>Auction details</h2>
@if (Request.IsAuthenticated && !User.IsInRole(RoleName.MaintenanceManager))
{
    <div>
        <div id="@userId tokens" style="float: left;">@ViewBag.NumOfTokens</div>&nbsp;&nbsp;
        <img src="~/images/token.png" />
    </div>

}
<hr />

<div class="row">
    <div class="col-sm-4">
        @{
            string imreBase64Data = Convert.ToBase64String(@Model.Auction.Image);
            string imgDataUrl = string.Format("data:image/png;base64,{0}", imreBase64Data);
            long time = 0;
            if (Model.Auction.State == AuctionState.Opened)
            {
                time = (long)(((DateTime)Model.Auction.DateTimeOpened).Ticks - DateTime.Now.Ticks) / TimeSpan.TicksPerMillisecond + Model.Auction.Duration * 1000;
            }
        }
        <img src="@imgDataUrl" style="width:100%" />
    </div>
    <div class="col-sm-8">
        <table class="table table-dark table-hover table-striped table-bordered">
            <tr>
                <td>@Html.DisplayNameFor(m => m.Auction.Name)</td>
                <td>@Model.Auction.Name</td>
            </tr>
            <tr>
                <td>Owner</td>
                <td>@Model.Auction.User.Email</td>
            </tr>
            <tr>
                <td>State</td>
                <td id="@Model.Auction.Id state">
                    @if (Model.Auction.State == AuctionState.Ready)
                    {
                        <span class="label label-default">@Model.Auction.State</span>
                    }
                    else if (Model.Auction.State == AuctionState.Opened)
                    {
                        <span class="label label-success">@Model.Auction.State</span>
                    }
                    else
                    {
                        <span class="label label-danger">@Model.Auction.State</span>
                    }

                </td>
            </tr>
            
                <tr>
                    <td>Remaining time:</td>
                        @if (Model.Auction.State == AuctionState.Opened)
                        {
                            <td><text id="@Model.Auction.Id" time="@time"></text></td>
                        }
                        else
                        {
                            <td><text id="@Model.Auction.Id"></text></td>
                        }
                </tr>
            
            <tr>
                <td>Current price</td>
                <td><text id="@Model.Auction.Id price">@Model.Auction.CurrentPrice</text><text> @Model.Auction.Currency</text></td>
            </tr>
            <tr>
                <td>
                    Last bidder:
                </td>
                @if (Model.Auction.LastBidder != null)
                {
                    <td id="@Model.Auction.Id name">@Model.Auction.LastBidder.UserName</td>
                }
                else
                {
                    <td id="@Model.Auction.Id name">No bidder</td>
                }
            </tr>
        </table>

            <div class="row">
                <div class="col-sm-3 form-group">
                    @Html.Label("Number of tokens")
                    @Html.TextBox("numOfTokens", "", new { placeholder = "", @class = "form-control" })
                </div>
                @Html.Hidden("auctionId", Model.Auction.Id)
                <div class="col-sm-1 form-group">
                    @Html.Label("   ")
                    <div id="btn">
                        @if (Request.IsAuthenticated && !User.IsInRole(RoleName.MaintenanceManager) && (userId != Model.Auction.User.Id) && (@Model.Auction.State == AuctionState.Opened))
                        {

                            <button class="btn btn-primary" onclick="bid(@Model.Auction.CurrentPrice)">Bid</button>


                        }
                        else
                        {
                            <button class="btn btn-primary" disabled="disabled">Bid</button>
                        }
                    </div>
                </div>
            </div>
    </div>
</div>

<hr />

<div class="row">
    <div class="col-sm-12"><button data-toggle="collapse" data-target="#clps" class="btn btn-primary" style="margin-bottom: 20px;">Show bids history</button></div>
</div>
<div class="row collapse" id="clps">
    
    <h4 style="margin-left: 15px;" id="zeroBids"></h4>
    
    <div class="col-sm-12">
        <table id="bids" class="table table-hover table-striped" style="width: 100%;" hidden>
            <thead>
                <tr>
                    <th>Created on</th>
                    <th>User</th>
                    <th>Number of tokens</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var bid in Model.Bids)
                {
                    <tr>
                        <td>@bid.DateTimeCreated.ToString()</td>
                        <td>@bid.User.Email</td>
                        <td>@bid.NumOfTokens</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>



@section scripts
{
    <script src="~/Scripts/jquery.signalR-2.3.0.min.js"></script>
    <script src="~/signalr/js"></script>

    <script>
        var myHub = $.connection.hub.start();

        $.connection.hub.disconnected(function () {

            setTimeout(function () {
                myHub = $.connection.hub.start();
                console.log("disconnected");
            }, 5000);
        });

        $.connection.myHub.client.updatePriceAndBidder = function (newPrice, newBidder, auctionId) {
            var priceField = document.getElementById(auctionId + " price");
            if (priceField != null)
                priceField.innerHTML = newPrice;

            var nameField = document.getElementById(auctionId + " name");
            if (nameField != null)
                nameField.innerHTML = newBidder;
        };

        $.connection.myHub.client.updateBidList = function (date, user, numOfTokens, auctionId) {
            var priceField = document.getElementById(auctionId + " price");
            if (priceField == null)
                return;

            $('#bids').removeAttr("hidden");
            document.getElementById("zeroBids").innerHTML = "";
            var table = $("#bids").DataTable();//document.getElementById("bids");

            table.row.add( [
                date,
                user,
                numOfTokens
            ]).draw(false);

            $("#bids").DataTable();
        }

        $.connection.myHub.client.updateNumOfTokens = function (userId, numOfTokens) {
            var tokens = document.getElementById(userId + " tokens");
            if (tokens != null)
                tokens.innerHTML = parseFloat(tokens.innerHTML) + numOfTokens;
        }

        $.connection.myHub.client.updateStateAndTimer = function(auctionId, time, userId) {
            var stateField = document.getElementById(auctionId + " state");
            if (stateField != null) {
                stateField.innerHTML = "<span class='label label-success' style='margin-bottom: 5px;' >OPENED</span><br />"
                var True = "@Request.IsAuthenticated";
                var False = "@User.IsInRole(RoleName.MaintenanceManager)";
                if ( (True == "True" ) && (False == "False") && ("@userId" != userId))
                    document.getElementById("btn").innerHTML = "<button class='btn btn-primary' id='btn' style='margin: 5px;' onclick='bid(0)'>Bid</button>";
                timer(auctionId, time + "");
            }
        }
    </script>
    <script>
        $(window).ready(function () {
            if (@Model.Bids.Count > 0) {
                $('#bids').removeAttr("hidden");
                $('#bids').DataTable();
            } else {
                document.getElementById("zeroBids").innerHTML = "There are no bids!";
            }
            $(".active a").css("background-color", "#df691a");
            $("td text[time]").each(function () {
                timer($(this).attr("id"), $(this).attr("time"));
            });
        });
    </script>

    <script type="text/javascript">
        var counter = 0;
        var array = new Array();

        function timer(id, time) {
            // Update the count down every 1 second
            if (time.charAt(0) == '-') {
                document.getElementById(id).innerHTML = "";
                document.getElementById(id).innerHTML = "";
                document.getElementById(id + " state").innerHTML = "<span class='label label-danger' style='margin-bottom: 5px;' >COMPLETED</span><br />";
                document.getElementById("btn").innerHTML = "<button class='btn btn-primary' style='margin: 5px;' disabled='disabled'>Bid</button>";
                return;
            }
            time = parseInt(time);
            time += new Date().getTime();
            var x = setInterval(function () { callBack(id, time, counter); }, 1000);
            array[counter++] = x;
        }




        function callBack(id, time, counter) {
            time = parseInt(time);
            var now = new Date().getTime();
            counter = parseInt(counter);

            // Find the distance between now and the count down date
            var distance = time - now;
            if (distance <= 0) {
                clearInterval(counter);
                document.getElementById(id).innerHTML = "";
                document.getElementById(id + " state").innerHTML = "<span class='label label-danger' style='margin-bottom: 5px;' >COMPLETED</span><br />";
                document.getElementById("btn").innerHTML = "<button class='btn btn-primary' style='margin: 5px;' disabled='disabled'>Bid</button>";
                return;
            } else {
                // Time calculations for days, hours, minutes and seconds
                var days = Math.floor(distance / (1000 * 60 * 60 * 24));
                var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
                var seconds = Math.floor((distance % (1000 * 60)) / 1000);

                // Display the result in the element with id="demo"
                document.getElementById(id).innerHTML = days + "d " + hours + "h " + minutes + "m " + seconds + "s ";
            }
            // If the count down is finished, write some text
        }


        function bid(currentPrice) {
            tokenValue = parseFloat(@ViewBag.tokenValue);
            var tokens = document.getElementById("@userId tokens").innerHTML;
            tokens = parseFloat(tokens);
            currentPrice = parseFloat(document.getElementById("@Model.Auction.Id price").innerHTML);
            var tokensNeeded = (currentPrice / tokenValue);
            //if (document.getElementById("bidder").innerHTML != "No bidder")
                //tokensNeeded++;
            var tokensToBid = document.getElementById("numOfTokens").value;
            if (isNaN(tokensToBid)) {
                bootbox.alert("You didn't enter appropriate value!",
                    function () { });
                return;
            }

            if (parseInt(tokensToBid) != parseFloat(tokensToBid)) {
                bootbox.alert("You need to enter integer value!",
                    function () {});
                return;
            }

            tokensToBid = parseFloat(tokensToBid);
            if (tokensToBid < 0) {
                bootbox.alert("You need to enter positive value!",
                    function () { });
                return;
            }
            else if ((tokensToBid == 0) && (document.getElementById("@Model.Auction.Id name").innerHTML != "No bidder")) {
                bootbox.alert("You need to enter positive value!",
                    function () { });
                return;
            }

            if (document.getElementById("@Model.Auction.Id name").innerHTML == "@user")
                tokensNeeded = tokensToBid;
            else
                tokensNeeded += tokensToBid;

            if (tokens < tokensNeeded) {
                //document.writeln(tokens + "   "  + tokensNeeded);
                bootbox.alert("You don't have enough tokens!",
                    function () { });
                return;
            }
            else {
                //document.getElementById("@userId tokens").innerHTML = tokens - tokensNeeded;
                //window.location.href = '@Url.Action("Create", "Bids")/?numOfTokens=' + tokensToBid + "&auctionId=@Model.Auction.Id";
                $.ajax({
                    type: "POST",
                    url: "/Bids/Create/?numOfTokens=" + tokensToBid + "&auctionId=" + "@Model.Auction.Id",
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    success: function () {

                    }
                });
            }

        }

    </script>
}